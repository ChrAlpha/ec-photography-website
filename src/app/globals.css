@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body,
:root {
  height: 100%;
}

@layer base {
  :root {
    --background: var(--background-default);
    --foreground: var(--text-default);
    --card: var(--background-default);
    --card-foreground: var(--text-default);
    --popover: var(--background-default);
    --popover-foreground: var(--text-default);
    --primary: var(--background-primary);
    --primary-foreground: var(--text-inverse);
    --secondary: var(--background-muted);
    --secondary-foreground: var(--text-default);
    --muted: var(--background-muted);
    --muted-foreground: var(--text-muted);
    --accent: var(--background-muted);
    --accent-foreground: var(--text-default);
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: var(--text-inverse);
    --border: var(--border-default);
    --input: var(--border-default);
    --ring: var(--background-primary);
    --radius: 0.5rem;

    /* FRAMER HSL LIGHT COLORS */
    --text-default: 200 10% 6%;
    --text-inverse: 0 0% 100%;
    --text-muted: 200 10% 6% / 60%;
    --text-inverse-muted: 0 0% 100% / 60%;
    --background-default: 0 0% 100%;
    --background-default-hover: 0 0% 96%;
    --background-muted: 0 0% 96%;
    --background-muted-hover: 0 0% 93%;
    --background-primary: 200 9% 6%;
    --background-primary-hover: 195 8% 10%;
    --border-default: 180 12% 92%;
  }

  .dark {
    --background: var(--background-default);
    --foreground: var(--text-default);
    --card: var(--background-default);
    --card-foreground: var(--text-default);
    --popover: var(--background-default);
    --popover-foreground: var(--text-default);
    --primary: var(--background-primary);
    --primary-foreground: var(--text-inverse);
    --secondary: var(--background-muted);
    --secondary-foreground: var(--text-default);
    --muted: var(--background-muted);
    --muted-foreground: var(--text-muted);
    --accent: var(--background-muted);
    --accent-foreground: var(--text-default);
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: var(--text-inverse);
    --border: var(--border-default);
    --input: var(--border-default);
    --ring: var(--background-primary);

    /* FRAMER HSL DARK COLORS */
    --text-default: 0 0% 100%;
    --text-inverse: 200 10% 6%;
    --text-muted: 0 0% 100% / 60%;
    --text-inverse-muted: 200 10% 6% / 60%;
    --background-default: 200 10% 6%;
    --background-default-hover: 0 0% 0%;
    --background-muted: 0 0% 100% / 7%;
    --background-muted-hover: 0 0% 100% / 11%;
    --background-primary: 0 0% 100%;
    --background-primary-hover: 0 0% 96%;
    --border-default: 200 4% 15%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* THEME TRANSITION */
::view-transition-group(root) {
  animation-duration: 1.25s;
}

::view-transition-new(root),
::view-transition-old(root) {
  mix-blend-mode: normal;
}

::view-transition-new(root) {
  animation-name: reveal-light;
}

::view-transition-old(root),
.dark::view-transition-old(root) {
  animation: none;
}

.dark::view-transition-new(root) {
  animation-name: reveal-dark;
}

@keyframes reveal-dark {
  from {
    clip-path: polygon(-30% 0, -30% 0, -15% 100%, -10% 115%);
  }
  to {
    clip-path: polygon(-30% 0, 130% 0, 115% 100%, -10% 115%);
  }
}

@keyframes reveal-light {
  from {
    clip-path: polygon(130% 0, 130% 0, 115% 100%, 110% 115%);
  }
  to {
    clip-path: polygon(130% 0, -30% 0, -15% 100%, 110% 115%);
  }
}

/* Basic editor styles */
.tiptap {
  /* List styles */
  ul,
  ol {
    padding: 0 1rem;
    margin: 1.25rem 1rem 1.25rem 0.4rem;
  }

  ul li {
    list-style-type: disc;

    p {
      margin-top: 0.25em;
      margin-bottom: 0.25em;
    }
  }

  ol li {
    list-style-type: decimal;

    p {
      margin-top: 0.25em;
      margin-bottom: 0.25em;
    }
  }

  /* Task list specific styles */
  ul[data-type="taskList"] {
    list-style: none;
    margin-left: 0;
    padding: 0;

    li {
      align-items: flex-start;
      display: flex;

      > label {
        flex: 0 0 auto;
        margin-right: 0.5rem;
        user-select: none;
      }

      > div {
        flex: 1 1 auto;
      }
    }

    input[type="checkbox"] {
      cursor: pointer;
    }

    ul[data-type="taskList"] {
      margin: 0;
    }
  }

  /* Heading styles */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: 1.1;
    margin-top: 2.5rem;
    text-wrap: pretty;
  }

  h1,
  h2 {
    margin-top: 3.5rem;
    margin-bottom: 1.5rem;
  }

  h1 {
    font-size: 1.4rem;
  }

  h2 {
    font-size: 1.2rem;
  }

  h3 {
    font-size: 1.1rem;
  }

  h4,
  h5,
  h6 {
    font-size: 1rem;
  }

  /* Table-specific styling */
  table {
    border-collapse: collapse;
    margin: 0;
    overflow: hidden;
    table-layout: fixed;
    width: 100%;

    td,
    th {
      border: 1px solid black;
      box-sizing: border-box;
      min-width: 1em;
      padding: 6px 8px;
      position: relative;
      vertical-align: top;

      > * {
        margin-bottom: 0;
      }
    }

    th {
      background-color: #c7c7c7;
      font-weight: bold;
      text-align: left;
    }

    .selectedCell:after {
      background: #c7c7c8;
      content: "";
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      pointer-events: none;
      position: absolute;
      z-index: 2;
    }

    .column-resize-handle {
      background-color: var(--primary);
      bottom: -2px;
      pointer-events: none;
      position: absolute;
      right: -2px;
      top: 0;
      width: 4px;
    }
  }

  .tableWrapper {
    margin: 1.5rem 0;
    overflow-x: auto;
  }

  &.resize-cursor {
    cursor: ew-resize;
    cursor: col-resize;
  }

  /* Image styles */
  img {
    display: block;
    height: auto;
    margin: 1.5rem 0;
    max-width: 100%;

    &.ProseMirror-selectednode {
      outline: 3px solid var(--primary);
    }
  }
}
